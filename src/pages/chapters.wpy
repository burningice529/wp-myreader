<template>
  <view>
    <scroll-view scroll-y style="height: 100vh;"
                 bindscrolltoupper="upper"
                 bindscrolltolower="lower"
                 bindscroll="scroll"
                 scroll-into-view="{{'chatperid' + (currentChapter-2 > 0 ? currentChapter-2 : 0)}}">
      <view class="list">
        <view class="li" wx:for="{{chapters}}" wx:key="key" wx:for-index="idx" wx:for-item="item">
        <a id="{{'chatperid' + idx}}" style="{{idx === currentChapter ? 'color:#FF0000' : ''}}" data-chaphterindex="{{idx}}" @tap="goToChapter">
        {{idx === currentChapter ? '当前: ' + item.title : item.title }}
        </a>
        </view>
      </view>
    </scroll-view>
  </view>
</template>
<style lang="less">
  @import "../styles/chapters.less";
</style>
<script>
  import wepy from 'wepy'
  import { STORAGE_READER, STORAGE_STORE, STORAGE_SETTING } from '../utils/constant'
  import {getStorage, setStorage} from '../utils/storage'
  export default class Chapters extends wepy.page {
    config = {
      navigationBarTitleText: 'MyReader'
    }

    components = {
    }
    data = {
      currentChapter: 0,
      chapters: [
//        {
//          currency: 0,
//          isVip: false,
//          link: 'http://www.xiaoxiaoshuwu.com/shtml/0/306/7262430.shtml',
//          order: 0,
//          partsize: 0,
//          title: '封推感言',
//          totalpage: 0,
//          unreadble: false
//        }
      ]
    }
    methods = {
      back: function () {
        wepy.navigateBack({
          delta: 1
        })
      },
      goToChapter: function(e) {
        var chaphterindex = e.currentTarget.dataset.chaphterindex
        console.log(chaphterindex)
        const { chapters, id } = getStorage(STORAGE_READER)
        setStorage(STORAGE_READER, {currentChapter: chaphterindex})
        setStorage(STORAGE_STORE, {[id]: getStorage(STORAGE_READER)})
        // 这里先往store里面存东西，然后再回退
        setStorage(STORAGE_SETTING, {fromChapter: true})
        wepy.navigateBack({
          delta: 1
        })
      }
    }
    onLoad() {
      var {chapters, currentChapter} = getStorage(STORAGE_READER)
      this.chapters = chapters
      this.currentChapter = currentChapter
    }
  }
</script>
