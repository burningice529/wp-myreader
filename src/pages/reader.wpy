<template>
  <view class="reader" style="{{(color.background ? 'background:' + color.background + ';' : '') + (color.color ? 'color:' + color.color + ';' : '')}}">
    <view wx:if="chapter.title">
      <view style="min-height: 100vh" @tap="close">
        <view class="head" style="{{(color.background ? 'background:' + color.background + ';' : '') + (color.color ? 'color:' + color.color + ';' : '')}}">
          <view class="info">
            <view class="h3">{{detail.title}}</view>
            <view class="p">{{chapter.title}}</view>
          </view>
          <view class="menus">
            <view class="button" @tap="back">
            <image class="img" style="opacity: 0.5" src="../icons/close.svg" alt=""></image>
          </view>
          </view>
        </view>
        <view class="content" @tap="close" style="font-size:{{fontSize}}px">
          <view class="p">
            {{chapter.body}}
          </view>
        </view>
      </view>
      <!-- 悬浮菜单 -->
      <view class="fixedMenu">
        <view class="{{menuState ? 'btnMain' : 'btnMainClose'}}" @tap="changeMenu">+</view>
        <view class="{{menuState ? 'ballWrap' : 'ballWrapClose'}}">
          <view @tap="goToChapters" class="ball">章节列表</view>
          <view @tap="prev" class="{{currentChapter < 1 ? 'ballPreOff' : 'ballPreOn'}}">上一章</view>
          <view @tap="next" class="{{currentChapter >= chapters.length - 1 ? 'ballNextOff' : 'ballNextOn'}}">下一章</view>
          <!--setting-->
          <view>
            <view @tap="open"> <view class="ball">设置</view></view>
            <view class="setting {{visible ? 'show' : 'hide'}}">
              <view class="buttons">
                <view class="span" @tap="setMode">{{mode === 'day' ? '黑夜' : '白天'}}</view>
                <view class="span" data-type="+" @tap="setFontSize">Aa+</view>
                <view class="span" data-type="-" @tap="setFontSize">Aa-</view>
                <view class="span" @tap="setRestTheme" >默认</view>
              </view>
              <view class="colors">
                <view class="colorsBox">
                  <repeat for="{{colors}}" item="item">
                    <view class="span" style="{{item.background ? 'background:' + item.background : ''}}" data-theme="" @tap="setThemeColor({{item}})"></view>
                  </repeat>
                </view>
              </view>
            </view>
          </view>
        </view>
      </view>
    </view>
    <view class="loading" wx:else>
      <image class="img" src="{{imgage}}" alt="loading"></image>
    </view>
  </view>
</template>

<style lang="less">
@import "../styles/reader.less";
</style>

<script>
  import wepy from 'wepy'
  import { COLORS, MODE_COLOR, STORAGE_SETTING, DEFAULT_SETTING } from '../utils/constant'
  import {getStorage, setStorage} from '../utils/storage'
  import {getDetail} from '../utils/api'

  export default class Reader extends wepy.page {
    config = {
      navigationBarTitleText: 'MyReader'
    }
    data = {
      chapter: {
        title: '第一章 陨落的天才',
        body: '望着测验魔石碑上面闪亮得甚至有些刺眼的五个大字，少年面无表情，紧握的手掌，因为大力，而导致略微尖锐的指甲深深的刺进了掌心之中，带来一阵阵钻心的疼痛…\n“哎，这废物真是把家族的脸都给丢光了。”'
      },
      chapters: [],
      chaptersContent: [],
      currentChapter: 0,
      currentSource: 0,
      detail: {
        title: '斗破苍穹'
      },
      downloadPercent: 0,
      downloadStatus: false,
      id: '50865988d7a545903b000009',
      source: [],

      menuState: false,
      defaultMode: DEFAULT_SETTING.mode,
      defaultColor: DEFAULT_SETTING.color,
      mode: DEFAULT_SETTING.mode,
      color: DEFAULT_SETTING.color, // 'background:#FAF9DE'
      colors: COLORS,
      fontSize: DEFAULT_SETTING.fontSize,
      visible: false  // 设置弹窗不显示
    }
    methods = {
      back: function () {
        wepy.navigateBack({
          delta: 1
        })
      },
      changeMenu: function () {
        this.menuState = !this.menuState
      },
      goToChapters: function () {
        wepy.navigateTo({
          url: '/pages/chapters'
        })
      },
      prev: function () {

      },
      next: function () {

      },
      open: function (e) {
        this.visible = true
      },
      close: function () {
        this.visible = false
      },
      stopEvent: function (e) {
      },
      setMode: function () {
        this.mode = this.mode === 'day' ? 'night' : 'day'
        var color = MODE_COLOR[this.mode]
        this.color = color
        setStorage(STORAGE_SETTING, {
          color: color
        })
      },
      setFontSize: function (e) {
        e.currentTarget.dataset.type === '+' ? this.fontSize++ : this.fontSize--
        setStorage(STORAGE_SETTING, {
          fontSize: this.fontSize
        })
      },
      setRestTheme: function () {
        this.mode = DEFAULT_SETTING.mode
        this.color = DEFAULT_SETTING.color
        this.fontSize = DEFAULT_SETTING.fontSize
        setStorage(STORAGE_SETTING, DEFAULT_SETTING)
      },
      setThemeColor: function (item) {
        this.color = item
        setStorage(STORAGE_SETTING, {
          color: item
        })
      }
    }

    // 初始化阅读器设置
    initSetting() {
      let settings = getStorage(STORAGE_SETTING)
      this.mode = settings.mode
      this.color = settings.color
      this.fontSize = settings.fontSize
    }
    onShow () {
      this.initSetting()
    }

    async onLoad (option) {
      console.log('option', option)
      const res = await getDetail({
        query: {
          id: option.id
        }
      })
      console.log(res)

    }
  }
</script>
